# vim ft=yaml

image:
  - macos-mojave
  - macos-catalina
  - macos-bigsur
  - macos-monterey

environment:
  global:
    PYPI_USERNAME: __token__
    PYPI_SERVER: https://test.pypi.org/legacy/
    PYPI_PASSWORD:
      secure:
        OXK5a0Kcyc7jYfkbpqCSUUGu6dBXpIFV3so6rCCxdoRn/xaJjxdu2Ox4rLw2FzA1YS05o72cojfF/wJIuD9Vfm+VOUJAvxRFcYyI7iZP3nwBBRA2JW2yUX/WpbqCDJqk+8lHlMhgmxmFYGzufpcDemTjc5BrCKs6OvHWWhIde7uW1FXa2szD9wf9+4JXCCdRn238Wg0t44CpRPbcAdg/DAeH6IHuRO6RUZtd+RUiif7BDhcRpJmuHGb2zaZ3ZKWybTHJxW4UmRxlqhpADb5ctw==

  matrix:
    - PYTHON: /Users/appveyor/venv3.6/bin
    - PYTHON: /Users/appveyor/venv3.7/bin
    - PYTHON: /Users/appveyor/venv3.8/bin
    - PYTHON: /Users/appveyor/venv3.9/bin
    - PYTHON: /Users/appveyor/venv3.10/bin

# Exclude version as per current support for MacOS images on AppVeyor: https://www.appveyor.com/docs/macos-images-software/
  exclude:
    - image: macos-mojave
      PYTHON: /Users/appveyor/venv3.10/bin
    - image: macos-bigsur
      PYTHON: /Users/appveyor/venv3.6/bin
    - image: macos-bigsur
      PYTHON: /Users/appveyor/venv3.7/bin
    - image: macos-monterey
      PYTHON: /Users/appveyor/venv3.6/bin
    - image: macos-monterey
      PYTHON: /Users/appveyor/venv3.7/bin

# For the release branch we deploy to real pypi
for:
  -
    branches:
      only:
        - release

    environment:
      global:
        PYPI_USERNAME: __token__
        PYPI_SERVER: https://upload.pypi.org/legacy/
        PYPI_PASSWORD:
          secure: BlFonvNFzspp5kZ6nsJTjSJfWqviD0DDAiCgMtKVbyspHPCu+PR/fS++fUCt6hM3X03oTdvzX0wYGbZiZwPr09SO4lblS0Qyilm8rnHpICzuCDn+KBBNrIFYdvU4WYndcQ9fNniPw1QiWxmMJsbxsSc7io3thIt+fG8L9OJxFQmjzDj2Az0oXOUswSVjKmq8aoOD2agdcS+JI6uyEq9Ve5kQYdY4Bgn3FNWSsL8QxnHW8MQxuNrpaWvhV22BGqGk0NQVNlnlEyCuiPVatPKsUA==

install:
  - git clone --recursive https://github.com/KristerSJakobsson/solnp.git
  - sh: |
      "${PYTHON}/python" -m pip install --upgrade pip

build_script:
  # Build and install the wheel
  - sh: |
      cd solnp
      "${PYTHON}/pip" install wheel==0.34.2
      "${PYTHON}/pip" install -r "./requirements-dev.txt"
      "${PYTHON}/python" setup.py sdist bdist_wheel

artifacts:
  - path: solnp/dist/*.*

test_script:
  # Test the compiled build
  - sh: |
      ls
      pattern="./dist/*.whl"
      files=( $pattern )
      "${PYTHON}/pip" install --no-index "${files[0]}"
      "${PYTHON}/python" -m pytest "./python_solnp/test/test.py"

on_success:
  # Upload the generated wheel package to pypi
  - sh: |
      /Users/appveyor/venv3.8/bin/pip install twine==3.1.1
      pattern="./dist/*.tar.gz"
      files=( $pattern )
      /Users/appveyor/venv3.8/bin/python -m twine upload --skip-existing --repository-url ${PYPI_SERVER} --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} "${files[0]}"
      pattern="./dist/*.whl"
      files=( $pattern )
      /Users/appveyor/venv3.8/bin/python -m twine upload --skip-existing --repository-url ${PYPI_SERVER} --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} "${files[0]}"

