[tool.cibuildwheel]
build = "*"
# Disable building PyPy wheels on all platforms
skip = "pp*"
test-skip = ""

archs = ["auto"]
build-frontend = "pip"
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = ""

before-all = ""
before-build = ""
repair-wheel-command = ""

before-test = ""
test-requires = "pytest"
test-command = "pytest {package}/python_solnp/test/test.py"

manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"

[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
archs = ["x86_64"] # TODO: Try to get arm64 wheels working once Github Actions hosts arm64 servers

# Build `universal2` and `arm64` wheels on an Intel runner.
# Note that the `arm64` wheel and the `arm64` part of the `universal2`
# wheel cannot be tested in this configuration.
# archs = ["x86_64", "arm64", "universal2"]

# Skip trying to test arm64 builds on Intel Macs
# test-skip = "*-macosx_arm64 *-macosx_universal2:arm64"

repair-wheel-command = [
  "delocate-listdeps {wheel}",
  "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]
